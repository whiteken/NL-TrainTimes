name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(Date:yyyyMMdd))

variables:
- group: pipeline-variables

trigger:
- dev
- master

pr:
- none  

pool:
  name: Hosted Windows Container

steps:
  - task: PowerShell@2
    displayName: 'Check for pre-requisite modules'
    inputs:
      targetType: 'filePath' # 'filePath' or 'inline'; defaults to filePath
      filePath: '$(Build.SourcesDirectory)\build.ps1' # required when targetType == FilePath
      #arguments: '-apikey $(PSGallery-APIKey) -path $(Build.SourcesDirectory)\NSTrainTime'
      #script: # required when targetType == Inline; actual contents of the script
      #errorActionPreference: # options: stop, continue, silentlyContinue; defaults to 'stop'
      #failOnStderr: # optional, defaults to false
      #ignoreLASTEXITCODE: # optional, defaults to false
      #pwsh: false # optional, always use PowerShell Core (even on Windows); defaults to false
      workingDirectory: '$(Build.SourcesDirectory)' # optional, initial working directory
    #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: richardfennellBM.BM-VSTS-PesterRunner-Task.Pester-Task.Pester@7
    displayName: 'Pester Test - Module'
    inputs:
      scriptFolder: 'hashtable @{Path="$(Build.SourcesDirectory)\Tests\NSTrainTime.tests.ps1";Parameters=@{BuildFolder="$(Build.SourcesDirectory)"}} '
      additionalModulePath: '$(Build.SourcesDirectory)\NSTrainTime'
      ForceUseOfPesterInTasks: true

  - task: richardfennellBM.BM-VSTS-PesterRunner-Task.Pester-Task.Pester@7
    displayName: 'Pester Test - Functions'
    inputs:
      scriptFolder: 'hashtable @{Path="$(Build.SourcesDirectory)\Tests\Get-NSAPICredential.tests.ps1";Parameters=@{BuildFolder="$(Build.SourcesDirectory)"}} '
      additionalModulePath: '$(Build.SourcesDirectory)\NSTrainTime'
      ForceUseOfPesterInTasks: true
    enabled: false

  - task: richardfennellBM.BM-VSTS-PesterRunner-Task.Pester-Task.Pester@7
    displayName: 'Pester Test Functions - PSScriptAnalyzer'
    inputs:
      scriptFolder: 'hashtable @{Path="$(Build.SourcesDirectory)\Tests\PSScriptAnalyzer.tests.ps1";Parameters=@{BuildFolder="$(Build.SourcesDirectory)"}} '
      additionalModulePath: '$(Build.SourcesDirectory)\NSTrainTime'
      ForceUseOfPesterInTasks: true
    enabled: false

  - task: RunPsScriptAnalyzer@1
    displayName: 'PsScriptAnalyzer Task'
    inputs:
      PsFolder: '$(Build.SourcesDirectory)\NSTrainTime'
    enabled: false

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: 'Test-Pester.XML'
      searchFolder: '$(Build.SourcesDirectory)'
      mergeTestResults: true

  #- task: PSGalleryPackager@0
  #  displayName: 'Publish to PS Gallery (master only)'
  #  inputs:
  #      apiKey: '$(PSGallery-APIKey)'
  #      path: '$(Build.SourcesDirectory)\NSTrainTime'
  #  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))