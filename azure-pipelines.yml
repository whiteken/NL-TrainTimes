name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(Date:yyyyMMdd))

variables:
- group: pipeline-variables

trigger:
- dev
- master

pr:
- none  

pool:
  name: Hosted Windows Container

steps:
  - task: richardfennellBM.BM-VSTS-PesterRunner-Task.Pester-Task.Pester@7
    displayName: 'Pester Test Module'
    inputs:
      scriptFolder: 'hashtable @{Path="$(Build.SourcesDirectory)\Tests\NSTrainTime.tests.ps1";Parameters=@{BuildFolder="$(Build.SourcesDirectory)"}} '
      additionalModulePath: '$(Build.SourcesDirectory)\NSTrainTime'
      ForceUseOfPesterInTasks: true

  - task: richardfennellBM.BM-VSTS-PesterRunner-Task.Pester-Task.Pester@7
    displayName: 'Pester Test Functions'
    inputs:
      scriptFolder: 'hashtable @{Path="$(Build.SourcesDirectory)\Tests\Get-NSAPICredential.tests.ps1";Parameters=@{BuildFolder="$(Build.SourcesDirectory)"}} '
      additionalModulePath: '$(Build.SourcesDirectory)\NSTrainTime'
      ForceUseOfPesterInTasks: true
    enabled: false

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: 'Test-Pester.XML'
      searchFolder: '$(Build.SourcesDirectory)'
      mergeTestResults: true

  - task: CopyFiles@2
    displayName: 'Stage files for Artifact publish (master only)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\NSTrainTime'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\NSTrainTime'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact to AZDO pipleines (master only)'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\NSTrainTime'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  
  #- task: PSGalleryPackager@0
  #  displayName: 'Publish to PS Gallery (master only)'
  #  inputs:
  #      apiKey: '$(PSGallery-APIKey)'
  #      path: '- task: CopyFiles@2